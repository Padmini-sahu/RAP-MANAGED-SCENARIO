managed implementation in class zbp_ps_travel_tp unique;
strict ( 2 );

define behavior for ZPS_TRAVEL_TP alias Travel
persistent table /dmo/travel_m
lock master
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;
  field ( readonly ) TravelId;
  association _Bookings { create; }

  mapping for /dmo/travel_m
    {
      TravelId = travel_id;
      AgencyId = agency_id;
      CustomerId = customer_id;
      BeginDate = begin_date;
      BookingFee = booking_fee;
      Description = description;
      OverallStatus = overall_status;
      TotalPrice = total_price;
      CreatedAt = created_at;
      CreatedBy = created_by;
      LastChangedAt = last_changed_at;
      LastChangedBy = last_changed_by;
      CurrencyCode = currency_code;
    }
}

define behavior for ZBOOKING_TP alias Booking
persistent table /dmo/booking_m
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId;
  association _Travel;

   mapping for /dmo/booking_m
    {
      TravelId = travel_id;
      BookingId = booking_id;
      BookingDate = booking_date;
      CustomerId = customer_id;
      BookingStatus =  booking_status;
      CarrierId = carrier_id;
      ConnectionId = connection_id;
      CurrencyCode = currency_code;
      FlightDate = flight_date;
      FlightPrice = flight_price;
      LastChangedAt = last_changed_at;
    }
}
